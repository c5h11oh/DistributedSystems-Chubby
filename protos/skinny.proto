syntax = "proto3";

package skinny;

message OpenReq {
  int64 session_id = 1;
  string path = 2;
  bool subscribe = 3;
  bool is_directory = 4;
}

message CloseReq {
  int64 session_id = 1;
  int32 fh = 2;
}

message GetContentReq {
  int64 session_id = 1;
  int32 fh = 2;
}

message LockAcqReq {
  int64 session_id = 1;
  int32 fh = 2;
  bool ex = 3;
}
 
message LockRelReq {
  int64 session_id = 1;
  int32 fh = 2;
}

message Response {
  int32 res = 1;
}

message SetContentReq {
    int64 session_id = 1;
    int32 fh = 2;
    string content = 3;
}

message DeleteReq {
  int64 session_id = 1;
  int32 fh = 2;
}


message Handle {
  int32 fh = 1;
}

message SessionId {
  int64 session_id = 1;
}

message Content {
  string content = 1;
}

message Event {
  optional int32 fh = 1;    
}

message Empty {

}

service Skinny {
  rpc StartSession (Empty) returns (SessionId) {}
  rpc Open (OpenReq) returns (Handle) {}
  rpc Close (CloseReq) returns (Empty) {}
  rpc GetContent(GetContentReq) returns (Content) {}
  rpc SetContent(SetContentReq) returns (Empty) {}
  rpc TryAcquire(LockAcqReq) returns (Response) {}
  rpc Acquire(LockAcqReq) returns (Response) {}
  rpc Release(LockRelReq) returns (Response) {}
  rpc Delete(DeleteReq) returns (Response) {}
  rpc EndSession (SessionId) returns (Empty) {}
}

service SkinnyCb {
  rpc KeepAlive(SessionId) returns (Event) {};
}
